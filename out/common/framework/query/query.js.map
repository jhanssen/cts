{"version":3,"sources":["../../../../src/common/framework/query/query.ts"],"names":["assert","encodeURIComponentSelectively","kBigSeparator","kPathSeparator","kWildcard","stringifyPublicParams","TestQueryMultiFile","level","isMultiFile","constructor","suite","file","filePathParts","depthInLevel","length","toString","toStringHelper","join","TestQueryMultiTest","isMultiTest","test","testPathParts","TestQueryMultiCase","isMultiCase","params","Object","keys","TestQuerySingleCase"],"mappings":"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","sourcesContent":["import { CaseParams } from '../params_utils.js';\nimport { assert } from '../util/util.js';\n\nimport { encodeURIComponentSelectively } from './encode_selectively.js';\nimport { kBigSeparator, kPathSeparator, kWildcard } from './separators.js';\nimport { stringifyPublicParams } from './stringify_params.js';\n\n/**\n * Represents a test query of some level.\n *\n * TestQuery types are immutable.\n */\nexport type TestQuery =\n  | TestQuerySingleCase\n  | TestQueryMultiCase\n  | TestQueryMultiTest\n  | TestQueryMultiFile;\n\nexport type TestQueryLevel =\n  | 1 // MultiFile\n  | 2 // MultiTest\n  | 3 // MultiCase\n  | 4; // SingleCase\n\n/**\n * A multi-file test query, like `s:*` or `s:a,b,*`.\n *\n * Immutable (makes copies of constructor args).\n */\nexport class TestQueryMultiFile {\n  readonly level: TestQueryLevel = 1;\n  readonly isMultiFile: boolean = true;\n  readonly suite: string;\n  readonly filePathParts: readonly string[];\n\n  constructor(suite: string, file: readonly string[]) {\n    this.suite = suite;\n    this.filePathParts = [...file];\n  }\n\n  get depthInLevel() {\n    return this.filePathParts.length;\n  }\n\n  toString(): string {\n    return encodeURIComponentSelectively(this.toStringHelper().join(kBigSeparator));\n  }\n\n  protected toStringHelper(): string[] {\n    return [this.suite, [...this.filePathParts, kWildcard].join(kPathSeparator)];\n  }\n}\n\n/**\n * A multi-test test query, like `s:f:*` or `s:f:a,b,*`.\n *\n * Immutable (makes copies of constructor args).\n */\nexport class TestQueryMultiTest extends TestQueryMultiFile {\n  readonly level: TestQueryLevel = 2;\n  readonly isMultiFile: false = false;\n  readonly isMultiTest: boolean = true;\n  readonly testPathParts: readonly string[];\n\n  constructor(suite: string, file: readonly string[], test: readonly string[]) {\n    super(suite, file);\n    assert(file.length > 0, 'multi-test (or finer) query must have file-path');\n    this.testPathParts = [...test];\n  }\n\n  get depthInLevel() {\n    return this.testPathParts.length;\n  }\n\n  protected toStringHelper(): string[] {\n    return [\n      this.suite,\n      this.filePathParts.join(kPathSeparator),\n      [...this.testPathParts, kWildcard].join(kPathSeparator),\n    ];\n  }\n}\n\n/**\n * A multi-case test query, like `s:f:t:*` or `s:f:t:a,b,*`.\n *\n * Immutable (makes copies of constructor args), except for param values\n * (which aren't normally supposed to change; they're marked readonly in CaseParams).\n */\nexport class TestQueryMultiCase extends TestQueryMultiTest {\n  readonly level: TestQueryLevel = 3;\n  readonly isMultiTest: false = false;\n  readonly isMultiCase: boolean = true;\n  readonly params: CaseParams;\n\n  constructor(suite: string, file: readonly string[], test: readonly string[], params: CaseParams) {\n    super(suite, file, test);\n    assert(test.length > 0, 'multi-case (or finer) query must have test-path');\n    this.params = { ...params };\n  }\n\n  get depthInLevel() {\n    return Object.keys(this.params).length;\n  }\n\n  protected toStringHelper(): string[] {\n    return [\n      this.suite,\n      this.filePathParts.join(kPathSeparator),\n      this.testPathParts.join(kPathSeparator),\n      stringifyPublicParams(this.params, true),\n    ];\n  }\n}\n\n/**\n * A multi-case test query, like `s:f:t:` or `s:f:t:a=1,b=1`.\n *\n * Immutable (makes copies of constructor args).\n */\nexport class TestQuerySingleCase extends TestQueryMultiCase {\n  readonly level: TestQueryLevel = 4;\n  readonly isMultiCase: false = false;\n\n  get depthInLevel() {\n    return 0;\n  }\n\n  protected toStringHelper(): string[] {\n    return [\n      this.suite,\n      this.filePathParts.join(kPathSeparator),\n      this.testPathParts.join(kPathSeparator),\n      stringifyPublicParams(this.params),\n    ];\n  }\n}\n"],"file":"query.js"}